[{"/Users/sushanpoojary/Documents/Sasha/273/Lab1/uber-eats/uber-eats-frontend/src/index.js":"1","/Users/sushanpoojary/Documents/Sasha/273/Lab1/uber-eats/uber-eats-frontend/src/App.js":"2","/Users/sushanpoojary/Documents/Sasha/273/Lab1/uber-eats/uber-eats-frontend/src/reportWebVitals.js":"3","/Users/sushanpoojary/Documents/Sasha/273/GitLab1/UberEats/uber-eats-frontend/src/index.js":"4","/Users/sushanpoojary/Documents/Sasha/273/GitLab1/UberEats/uber-eats-frontend/src/reportWebVitals.js":"5","/Users/sushanpoojary/Documents/Sasha/273/GitLab1/UberEats/uber-eats-frontend/src/components/userlogin/index.jsx":"6","/Users/sushanpoojary/Documents/Sasha/273/GitLab1/UberEats/uber-eats-frontend/src/components/userlogin/userReg.jsx":"7","/Users/sushanpoojary/Documents/Sasha/273/GitLab1/UberEats/uber-eats-frontend/src/components/userlogin/history.js":"8","/Users/sushanpoojary/Documents/Sasha/273/GitLab1/UberEats/uber-eats-frontend/src/Routes.js":"9","/Users/sushanpoojary/Documents/Sasha/273/GitLab1/UberEats/uber-eats-frontend/src/history.js":"10","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/index.js":"11","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/reportWebVitals.js":"12","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/Routes.js":"13","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/App.js":"14","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/history.js":"15","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/components/userlogin/index.jsx":"16","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/components/userlogin/userReg.jsx":"17","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/components/userlogin/history.js":"18","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/NavBar.js":"19","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/components/reslogin/resReg.js":"20","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/components/reslogin/index.js":"21","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/components/reslogin/history.js":"22"},{"size":501,"mtime":1631778720389,"results":"23","hashOfConfig":"24"},{"size":577,"mtime":1631672320371,"results":"25","hashOfConfig":"24"},{"size":375,"mtime":1631778709556,"results":"26","hashOfConfig":"24"},{"size":748,"mtime":1632081085078,"results":"27","hashOfConfig":"28"},{"size":375,"mtime":1631823862320,"results":"29","hashOfConfig":"28"},{"size":3724,"mtime":1632180010273,"results":"30","hashOfConfig":"28"},{"size":4759,"mtime":1632180008923,"results":"31","hashOfConfig":"28"},{"size":86,"mtime":1632075024278,"results":"32","hashOfConfig":"28"},{"size":546,"mtime":1632078569666,"results":"33","hashOfConfig":"28"},{"size":86,"mtime":1632074098811,"results":"34","hashOfConfig":"28"},{"size":751,"mtime":1632959928133,"results":"35","hashOfConfig":"36"},{"size":375,"mtime":1632724449309,"results":"37","hashOfConfig":"36"},{"size":867,"mtime":1633302975469,"results":"38","hashOfConfig":"36"},{"size":443,"mtime":1633047226847,"results":"39","hashOfConfig":"36"},{"size":86,"mtime":1632724449308,"results":"40","hashOfConfig":"36"},{"size":7036,"mtime":1633302960656,"results":"41","hashOfConfig":"36"},{"size":8499,"mtime":1633302216982,"results":"42","hashOfConfig":"36"},{"size":86,"mtime":1632724449308,"results":"43","hashOfConfig":"36"},{"size":5170,"mtime":1633237912793,"results":"44","hashOfConfig":"36"},{"size":8891,"mtime":1633304255546,"results":"45","hashOfConfig":"36"},{"size":7011,"mtime":1633304975959,"results":"46","hashOfConfig":"36"},{"size":86,"mtime":1632982511570,"results":"47","hashOfConfig":"36"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ipha2x",{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"qnnj4l",{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"d7vjta",{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"/Users/sushanpoojary/Documents/Sasha/273/Lab1/uber-eats/uber-eats-frontend/src/index.js",[],"/Users/sushanpoojary/Documents/Sasha/273/Lab1/uber-eats/uber-eats-frontend/src/App.js",[],["100","101","102","103","104","105"],"/Users/sushanpoojary/Documents/Sasha/273/Lab1/uber-eats/uber-eats-frontend/src/reportWebVitals.js",[],"/Users/sushanpoojary/Documents/Sasha/273/GitLab1/UberEats/uber-eats-frontend/src/index.js",[],["106","107","108","109","110","111"],"/Users/sushanpoojary/Documents/Sasha/273/GitLab1/UberEats/uber-eats-frontend/src/reportWebVitals.js",[],"/Users/sushanpoojary/Documents/Sasha/273/GitLab1/UberEats/uber-eats-frontend/src/components/userlogin/index.jsx",["112","113","114"],"/Users/sushanpoojary/Documents/Sasha/273/GitLab1/UberEats/uber-eats-frontend/src/components/userlogin/userReg.jsx",["115","116","117"],"/Users/sushanpoojary/Documents/Sasha/273/GitLab1/UberEats/uber-eats-frontend/src/components/userlogin/history.js",[],"/Users/sushanpoojary/Documents/Sasha/273/GitLab1/UberEats/uber-eats-frontend/src/Routes.js",[],"/Users/sushanpoojary/Documents/Sasha/273/GitLab1/UberEats/uber-eats-frontend/src/history.js",[],"/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/index.js",[],["118","119","120","121","122","123"],"/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/reportWebVitals.js",[],"/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/Routes.js",[],"/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/App.js",[],"/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/history.js",[],["124","125","126","127","128","129"],"/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/components/userlogin/index.jsx",["130","131","132","133","134"],"/* eslint-disable prefer-destructuring */\n/* eslint-disable react/destructuring-assignment */\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport styled from 'styled-components';\nimport cookie from 'react-cookies';\nimport Axios from 'axios';\nimport {\n  BrowserRouter as Router,\n  Link,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport { Form } from 'react-bootstrap';\nimport history from './history';\n// eslint-disable-next-line import/no-cycle\nimport { userReg } from './userReg';\n\nconst HeadText = styled.h2`\n    font-size: 30px;\n    font-weight: 500;\n    line-height: 1.24;\n    color: ##000000;\n    float: left;\n    // z-index: 0;\n    // margin: 0;\n    //padding-left: 150px;\n`;\nconst OverallText = styled.h2`\n    font-size: 18px;\n    font-weight: 300;\n    line-height: 1.00;\n    color: ##000000;\n    float: left;\n    // z-index: 0;\n    // margin: 0;\n    //padding-left: 150px;\n`;\n\nexport class UserLogin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      authFlag: false,\n      authMessage: '',\n      emailValid: '',\n      passwordValid: '',\n      redirectHome: '',\n      emailError: '',\n      passwordError: '',\n      authMessageE: '',\n    };\n    this.emailInputHandler = this.emailInputHandler.bind(this);\n    this.passwordInputHandler = this.passwordInputHandler.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleValidation() {\n    // console.log('validation');\n    const {\n      emailValid,\n      passwordValid,\n      authFlag,\n      authMessage,\n    } = this.state;\n    const emailError = emailValid ? '' : 'Email is invalid';\n    const passwordError = passwordValid ? '' : 'Password is invalid';\n    const authMessageE = authFlag ? '' : authMessage;\n    this.setState({\n      emailError,\n      passwordError,\n      authMessageE,\n    });\n  }\n\n  emailInputHandler = (event) => {\n    console.log(event.target.value);\n    const email = event.target.value;\n    const emailRegExp = new RegExp('.+@.+\\\\..+');\n    if (email !== '' && emailRegExp.test(email)) {\n      this.setState({\n        email,\n        emailValid: true,\n      });\n    } else {\n      this.setState({\n        emailValid: false,\n      });\n    }\n  }\n\n  passwordInputHandler = (event) => {\n    console.log(event.target.value);\n    const password = event.target.value;\n    if (password !== '') {\n      this.setState({\n        password,\n        passwordValid: true,\n      });\n    } else {\n      this.setState({\n        passwordValid: false,\n      });\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const logdata = {\n      email: this.state.email,\n      password: this.state.password,\n    };\n\n    console.log(logdata);\n    // Axios.defaults.withCredentials = true;\n    Axios.post('http://localhost:3001/login', logdata)\n      .then((response) => {\n        console.log('Status Code : ', response.status);\n        if (response.status === 200) {\n          const status = response.data.status;\n          if (status === 200) {\n            const token = response.data.token;\n            localStorage.setItem('ubereatsUserToken', token);\n            this.setState({\n              authFlag: true,\n              authMessage: '',\n              redirectHome: <Redirect to=\"/\" />,\n            });\n          } else if (status === 403) {\n            this.setState({\n              authFlag: false,\n              authMessage: 'Invalid Credentials',\n            });\n          } else if (status === 404) {\n            this.setState({\n              authFlag: false,\n              authMessage: response.data.message,\n            });\n          } else {\n            this.setState({\n              authFlag: false,\n              authMessage: response.data.message,\n            });\n          }\n        } else {\n          this.setState({\n            authFlag: false,\n            authMessage: 'DB Error',\n          });\n        }\n      }); this.handleValidation();\n  }\n\n  render() {\n    let redirectVar = null;\n    if (cookie.load('cookie')) {\n      console.log('cookie');\n      redirectVar = <Redirect to=\"/\" />;\n    }\n    const redirectHome = this.state.redirectHome;\n    const emailError = this.state.emailError;\n    const passwordError = this.state.passwordError;\n    const authMessageE = this.state.authMessageE;\n    return (\n      <div>\n        {redirectVar}\n        {redirectHome}\n        <div className=\"container\">\n          <Form>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <HeadText>\n                  Welcome back\n                  <br />\n                  <br />\n                </HeadText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  Sign in with your email address.\n                  <br />\n                </OverallText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  <input type=\"email\" name=\"email\" placeholder=\" Email \" style={{ width: '390px', height: '35px' }} onChange={this.emailInputHandler} />\n                  <span style={{ color: 'red' }}>\n                    {emailError}\n                  </span>\n                  <br />\n                </OverallText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  <input type=\"password\" name=\"password\" placeholder=\" Password \" style={{ width: '390px', height: '35px' }} onChange={this.passwordInputHandler} />\n                  <span style={{ color: 'red' }}>\n                    {passwordError}\n                  </span>\n                  <br />\n                  <span style={{ color: 'red' }}>\n                    {authMessageE}\n                  </span>\n                  <br />\n                </OverallText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  <input type=\"button\" value=\"Login\" style={{ width: '390px', height: '35px', backgroundColor: '#7bb420' }} onClick={this.handleSubmit} />\n                </OverallText>\n              </div>\n            </div>\n            <OverallText>\n              New to Uber?\n              <Router forceRefresh>\n                <Link to=\"/userReg\" onClick={() => history.push('/userReg')} style={{ color: 'green' }}> Create an account</Link>\n                <Switch>\n                  <Route exact path=\"/userReg\" component={userReg} />\n                </Switch>\n              </Router>\n            </OverallText>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/components/userlogin/userReg.jsx",["135","136","137","138","139","140","141"],"/* eslint-disable prefer-destructuring */\n/* eslint-disable react/destructuring-assignment */\nimport React from 'react';\n// import ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Axios from 'axios';\nimport {\n  BrowserRouter as Router,\n  Link,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport styled from 'styled-components';\nimport history from './history';\n// eslint-disable-next-line import/no-cycle\nimport { UserLogin } from './index';\n\nconst HeadText = styled.h2`\n    font-size: 30px;\n    font-weight: 500;\n    line-height: 1.24;\n    color: ##000000;\n    float: left;\n    // z-index: 0;\n    // margin: 0;\n    //padding-left: 150px;\n`;\nconst OverallText = styled.h2`\n    font-size: 18px;\n    font-weight: 300;\n    line-height: 1.00;\n    color: ##000000;\n    float: left;\n    // z-index: 0;\n    // margin: 0;\n    //padding-left: 150px;\n`;\n\nexport class userReg extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      contact: '',\n      email: '',\n      password: '',\n      // register: false,\n      redirect: null,\n      usernameValid: '',\n      contactValid: '',\n      emailValid: '',\n      passwordValid: '',\n      usernameError: '',\n      contactError: '',\n      emailError: '',\n      passwordError: '',\n    };\n    this.usernameInputHandler = this.usernameInputHandler.bind(this);\n    this.contactInputHandler = this.contactInputHandler.bind(this);\n    this.emailInputHandler = this.emailInputHandler.bind(this);\n    this.passwordInputHandler = this.passwordInputHandler.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // componentDidMount() {\n  //   this.setState({\n  //     // eslint-disable-next-line react/no-unused-state\n  //     register: false,\n  //   });\n  // }\n\n  handleValidation() {\n    // console.log('validation');\n    const {\n      usernameValid,\n      contactValid,\n      emailValid,\n      passwordValid,\n    } = this.state;\n    const usernameError = usernameValid ? '' : 'Name cannot be empty.';\n    const contactError = contactValid ? '' : 'Contact is invalid';\n    const emailError = emailValid ? '' : 'Email is invalid';\n    const passwordError = passwordValid ? '' : 'Password cannot be blank.';\n    this.setState({\n      usernameError,\n      contactError,\n      emailError,\n      passwordError,\n    });\n  }\n\n  usernameInputHandler = (event) => {\n    console.log(event.target.value);\n    const username = event.target.value;\n    if (username !== '') {\n      this.setState({\n        username,\n        usernameValid: true,\n      });\n    } else {\n      this.setState({\n        usernameValid: false,\n      });\n    }\n  }\n\n  contactInputHandler = (event) => {\n    console.log(event.target.value);\n    const contact = event.target.value;\n    const contactRegExp = new RegExp(/^[0-9\\b]+$/);\n    if (contact !== '' && contactRegExp.test(contact) && contact.length === 10) {\n      this.setState({\n        contact,\n        contactValid: true,\n      });\n    } else {\n      this.setState({\n        contactValid: false,\n      });\n    }\n  }\n\n  emailInputHandler = (event) => {\n    console.log(event.target.value);\n    const email = event.target.value;\n    const emailRegExp = new RegExp('.+@.+\\\\..+');\n    if (email !== '' && emailRegExp.test(email)) {\n      this.setState({\n        email,\n        emailValid: true,\n      });\n    } else {\n      this.setState({\n        emailValid: false,\n      });\n    }\n  }\n\n  passwordInputHandler = (event) => {\n    console.log(event.target.value);\n    const password = event.target.value;\n    if (password !== '') {\n      this.setState({\n        password,\n        passwordValid: true,\n      });\n    } else {\n      this.setState({\n        passwordValid: false,\n      });\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const {\n      username,\n      contact,\n      email,\n      password,\n    } = this.state;\n    console.log(username, contact, email, password);\n    Axios.post('http://localhost:3001/userReg', {\n      username,\n      contact,\n      email,\n      password,\n    }).then((response) => {\n      console.log('Status Code : ', response.status);\n      console.log(response);\n      this.setState({\n        redirect: true,\n      });\n\n      // props.history.push('/login');\n      // <Redirect to='/login'/>\n    }); this.handleValidation();\n  }\n\n  render() {\n    let redirectVar = null;\n    if (this.state.redirect) {\n      redirectVar = <Redirect to=\"/login\" />;\n    }\n    const usernameError = this.state.usernameError;\n    const contactError = this.state.contactError;\n    const emailError = this.state.emailError;\n    const passwordError = this.state.passwordError;\n    return (\n      <div>\n        {redirectVar}\n        <div className=\"container\">\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <HeadText>\n                  Let&apos;s get started\n                  <br />\n                  <br />\n                </HeadText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  Enter your details(required).\n                  <br />\n                </OverallText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  <input type=\"text\" name=\"username\" placeholder=\" Name \" style={{ width: '390px', height: '35px' }} onChange={this.usernameInputHandler} required />\n                  <span style={{ color: 'red' }}>\n                    {usernameError}\n                  </span>\n                  <br />\n                </OverallText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  <input type=\"tel\" name=\"contact\" placeholder=\" Contact Number \" style={{ width: '390px', height: '35px' }} onChange={this.contactInputHandler} required />\n                  <span style={{ color: 'red' }}>\n                    {contactError}\n                  </span>\n                  <br />\n                </OverallText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  <input type=\"email\" name=\"email\" placeholder=\" Email \" style={{ width: '390px', height: '35px' }} onChange={this.emailInputHandler} required />\n                  <span style={{ color: 'red' }}>\n                    {emailError}\n                  </span>\n                  <br />\n                </OverallText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  <input type=\"password\" name=\"password\" placeholder=\" Password \" style={{ width: '390px', height: '35px' }} onChange={this.passwordInputHandler} required />\n                  <span style={{ color: 'red' }}>\n                    {passwordError}\n                  </span>\n                  <br />\n                  <br />\n                </OverallText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  <input type=\"button\" value=\"Register\" style={{ width: '390px', height: '35px', backgroundColor: '#7bb420' }} onClick={this.handleSubmit} />\n                </OverallText>\n              </div>\n            </div>\n          </form>\n          <div className=\"row\">\n            <div className=\"col-xs\" />\n            <div className=\"col-xs\">\n              <OverallText>\n                Already have an account?\n                <Router forceRefresh>\n                  <Link to=\"/login\" onClick={() => history.push('/login')} style={{ color: 'green' }}> Login</Link>\n                  <Switch>\n                    <Route exact path=\"/login\" component={UserLogin} />\n                  </Switch>\n                </Router>\n              </OverallText>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/components/userlogin/history.js",[],"/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/NavBar.js",["142","143","144"],"// /* eslint-disable */\nimport React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\n// import cookie from 'react-cookies';\n// import { Redirect } from 'react-router';\nimport 'bootstrap/dist/css/bootstrap.css';\n// import { Glyphicon } from 'react-bootstrap';\n// import Button from '@material-ui/core/Button';\nimport {\n  Navbar,\n  NavDropdown,\n  Form,\n  Button,\n} from 'react-bootstrap';\n// import Icon from '@mui/material/Icon';\n// import RestaurantIcon from '@mui/icons-material/Restaurant';\n\n// create the Navbar Component\nclass NavBar extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n  // handle logout to destroy the cookie\n\n    handleLogout = () => {\n      localStorage.removeItem('ubereatsResToken');\n      // cookie.remove('cookie', { path: '/' });\n    }\n\n    handleUserLogout = () => {\n      localStorage.removeItem('ubereatsUserToken');\n    }\n\n    render() {\n      let navBarButtons = null;\n      const buttonStyle = {\n        margin: '6px',\n      };\n\n      if (localStorage.getItem('ubereatsResToken')) {\n        console.log('Restaurant Active sesh!');\n        navBarButtons = (\n          <Form className=\"offset-sm-9\" inline>\n            {/* <Button variant=\"link\" style={btnStyle} href='/reshome'>Home</Button> */}\n            <NavDropdown title=\"Restaurant Account\" id=\"nav-dropdown\">\n              <NavDropdown.Item href=\"/resprofile\">Profile</NavDropdown.Item>\n              <NavDropdown.Item href=\"/additem\">Add Menu Item</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item onClick={this.handleLogout} href=\"/\">Logout</NavDropdown.Item>\n            </NavDropdown>\n          </Form>\n        );\n      } else if (localStorage.getItem('ubereatsUserToken')) {\n        console.log('User Active Sesh!');\n        navBarButtons = (\n          <Form className=\"offset-sm-9\" inline>\n            <Button variant=\"link\" style={buttonStyle} href=\"/cart\">Cart</Button>\n            <NavDropdown title=\"Account\" id=\"nav-dropdown\">\n              <NavDropdown.Item href=\"/order\">Order</NavDropdown.Item>\n              <NavDropdown.Item href=\"/prevorder\">Previous Orders</NavDropdown.Item>\n              <NavDropdown.Item href=\"/profile\">Profile</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item onClick={this.handleUserLogout} href=\"/login\">Logout</NavDropdown.Item>\n            </NavDropdown>\n          </Form>\n        );\n      } else {\n        console.log('No Active sesh!');\n        navBarButtons = (\n          <Form className=\"offset-sm-9\" inline>\n            <Button variant=\"success\" style={buttonStyle} href=\"/login\">Login</Button>\n            <Button variant=\"outline-success\" style={buttonStyle} href=\"/userReg\">Sign Up</Button>\n            <Button variant=\"primary\" style={buttonStyle} href=\"/reslogin\">Business?</Button>\n          </Form>\n        );\n      }\n      return (\n        <div>\n          <Navbar bg=\"transparent\" expand=\"lg\">\n            <Navbar.Brand href=\"/\" bsPrefix=\"mainNavBrand-logo\">UberEats</Navbar.Brand>\n            {navBarButtons}\n          </Navbar>\n        </div>\n      );\n    }\n}\nexport default NavBar;\n\n//     render() {\n//       // if Cookie is set render Logout Button\n\n//       let navLogin = null;\n//       if (cookie.load('cookie')) {\n//         console.log('Able to read cookie');\n//         navLogin = (\n//           <ul className=\"nav navbar-nav navbar-right\">\n//             <li>\n//               <Link to=\"/navbar\" onClick={this.handleLogout}>\n//                 <span className=\"glyphicon glyphicon-cutlery\" />\n//                 Logout\n//               </Link>\n//             </li>\n//           </ul>\n//         );\n//       } else {\n//         // Else display login button\n//         console.log('Not Able to read cookie');\n//         navLogin = (\n//           <Link to=\"/login\">\n//             <span className=\"glyphicon glyphicon-log-in\" />\n//             Login\n//           </Link>\n//         );\n//       }\n//       let redirectVar = null;\n//       if (cookie.load('cookie')) {\n//         redirectVar = <Redirect to=\"/navbar\" />;\n//       }\n//       return (\n//         <div>\n//           {redirectVar}\n//           <nav className=\"nav avbar-nav navbar-right\">\n//             <div className=\"container-fluid\">\n//               {/* <div className=\"navbar-header\">\n//                 <a Link to=\"/\" className=\"navbar-brand\">UberEats</a>\n//               </div> */}\n//               {/* <ul className=\"nav navbar-nav\" style={{ flexDirection: 'row' }}>\n//                 <div><li className=\"active\"><Link to=\"/home\">Home</Link></li></div>\n//                 <li><Link to=\"/create\">Add a Book</Link></li>\n//                 <li><Link to=\"/delete\">Delete a Book</Link></li>\n//               </ul> */}\n//               <div style={{ float: 'right', marginLeft: '100px' }}>\n//                 <Button variant=\"contained\">\n//                   <RestaurantIcon />\n//                   {navLogin}\n//                 </Button>\n//               </div>\n//             </div>\n//           </nav>\n//         </div>\n//       );\n//     }\n// }\n\n// export default NavBar;\n","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/components/reslogin/resReg.js",["145","146","147","148","149","150","151"],"/* eslint-disable prefer-destructuring */\n/* eslint-disable react/destructuring-assignment */\nimport React from 'react';\n// import ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Axios from 'axios';\nimport {\n  BrowserRouter as Router,\n  Link,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport styled from 'styled-components';\nimport history from './history';\n// eslint-disable-next-line import/no-cycle\nimport { resLogin } from './index';\n\nconst HeadText = styled.h2`\n    font-size: 30px;\n    font-weight: 500;\n    line-height: 1.24;\n    color: ##000000;\n    float: left;\n    // z-index: 0;\n    // margin: 0;\n    //padding-left: 150px;\n`;\nconst OverallText = styled.h2`\n    font-size: 18px;\n    font-weight: 300;\n    line-height: 1.00;\n    color: ##000000;\n    float: left;\n    // z-index: 0;\n    // margin: 0;\n    //padding-left: 150px;\n`;\n\nexport class resReg extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      location: '',\n      email: '',\n      password: '',\n      // register: false,\n      redirect: null,\n      usernameValid: '',\n      locationValid: '',\n      emailValid: '',\n      passwordValid: '',\n      usernameError: '',\n      locationError: '',\n      emailError: '',\n      passwordError: '',\n    };\n    this.usernameInputHandler = this.usernameInputHandler.bind(this);\n    this.locationInputHandler = this.locationInputHandler.bind(this);\n    this.emailInputHandler = this.emailInputHandler.bind(this);\n    this.passwordInputHandler = this.passwordInputHandler.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // componentDidMount() {\n  //   this.setState({\n  //     // eslint-disable-next-line react/no-unused-state\n  //     register: false,\n  //   });\n  // }\n\n  handleValidation() {\n    // console.log('validation');\n    const {\n      usernameValid,\n      locationValid,\n      emailValid,\n      passwordValid,\n    } = this.state;\n    const usernameError = usernameValid ? '' : 'Name cannot be empty.';\n    const locationError = locationValid ? '' : 'Location cannot be empty.';\n    const emailError = emailValid ? '' : 'Email is invalid';\n    const passwordError = passwordValid ? '' : 'Password cannot be blank.';\n    this.setState({\n      usernameError,\n      locationError,\n      emailError,\n      passwordError,\n    });\n  }\n\n  usernameInputHandler = (event) => {\n    console.log(event.target.value);\n    const username = event.target.value;\n    if (username !== '') {\n      this.setState({\n        username,\n        usernameValid: true,\n      });\n    } else {\n      this.setState({\n        usernameValid: false,\n      });\n    }\n  }\n\n  // contactInputHandler = (event) => {\n  //   console.log(event.target.value);\n  //   const contact = event.target.value;\n  //   const contactRegExp = new RegExp(/^[0-9\\b]+$/);\n  //   if (contact !== '' && contactRegExp.test(contact) && contact.length === 10) {\n  //     this.setState({\n  //       contact,\n  //       contactValid: true,\n  //     });\n  //   } else {\n  //     this.setState({\n  //       contactValid: false,\n  //     });\n  //   }\n  // }\n\n  emailInputHandler = (event) => {\n    console.log(event.target.value);\n    const email = event.target.value;\n    const emailRegExp = new RegExp('.+@.+\\\\..+');\n    if (email !== '' && emailRegExp.test(email)) {\n      this.setState({\n        email,\n        emailValid: true,\n      });\n    } else {\n      this.setState({\n        emailValid: false,\n      });\n    }\n  }\n\n  passwordInputHandler = (event) => {\n    console.log(event.target.value);\n    const password = event.target.value;\n    if (password !== '') {\n      this.setState({\n        password,\n        passwordValid: true,\n      });\n    } else {\n      this.setState({\n        passwordValid: false,\n      });\n    }\n  }\n\n  locationInputHandler = (event) => {\n    console.log(event.target.value);\n    const location = event.target.value;\n    if (location !== '') {\n      this.setState({\n        location,\n        locationValid: true,\n      });\n    } else {\n      this.setState({\n        locationValid: false,\n      });\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const {\n      username,\n      location,\n      email,\n      password,\n    } = this.state;\n    console.log(username, location, email, password);\n    Axios.post('http://localhost:3001/resReg', {\n      username,\n      location,\n      email,\n      password,\n    }).then((response) => {\n      console.log('Status Code : ', response.status);\n      console.log(response);\n      this.setState({\n        redirect: true,\n      });\n\n      // props.history.push('/login');\n      // <Redirect to='/login'/>\n    }); this.handleValidation();\n  }\n\n  render() {\n    let redirectVar = null;\n    if (this.state.redirect) {\n      redirectVar = <Redirect to=\"/reslogin\" />;\n    }\n    const usernameError = this.state.usernameError;\n    const locationError = this.state.locationError;\n    const emailError = this.state.emailError;\n    const passwordError = this.state.passwordError;\n    return (\n      <div>\n        {redirectVar}\n        <div className=\"container\">\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <HeadText>\n                  Let&apos;s register your business\n                  <br />\n                  <br />\n                </HeadText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  Enter details.\n                  <br />\n                </OverallText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  <input type=\"text\" name=\"username\" placeholder=\" Restaurant Name \" style={{ width: '390px', height: '35px' }} onChange={this.usernameInputHandler} required />\n                  <span style={{ color: 'red' }}>\n                    {usernameError}\n                  </span>\n                  <br />\n                </OverallText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  <input type=\"email\" name=\"email\" placeholder=\" Email \" style={{ width: '390px', height: '35px' }} onChange={this.emailInputHandler} required />\n                  <span style={{ color: 'red' }}>\n                    {emailError}\n                  </span>\n                  <br />\n                </OverallText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  <input type=\"password\" name=\"password\" placeholder=\" Password \" style={{ width: '390px', height: '35px' }} onChange={this.passwordInputHandler} required />\n                  <span style={{ color: 'red' }}>\n                    {passwordError}\n                  </span>\n                  <br />\n                </OverallText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  <input type=\"text\" name=\"location\" placeholder=\" Restaurant Location \" style={{ width: '390px', height: '35px' }} onChange={this.locationInputHandler} required />\n                  <span style={{ color: 'red' }}>\n                    {locationError}\n                  </span>\n                  <br />\n                  <br />\n                </OverallText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  <input type=\"button\" value=\"Register\" style={{ width: '390px', height: '35px', backgroundColor: '#7bb420' }} onClick={this.handleSubmit} />\n                </OverallText>\n              </div>\n            </div>\n          </form>\n          <div className=\"row\">\n            <div className=\"col-xs\" />\n            <div className=\"col-xs\">\n              <OverallText>\n                Already a partner?\n                <Router forceRefresh>\n                  <Link to=\"/reslogin\" onClick={() => history.push('/reslogin')} style={{ color: 'green' }}> Login</Link>\n                  <Switch>\n                    <Route exact path=\"/reslogin\" component={resLogin} />\n                  </Switch>\n                </Router>\n              </OverallText>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/components/reslogin/index.js",["152","153","154","155"],"/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/components/reslogin/history.js",[],{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"156","replacedBy":"168"},{"ruleId":"158","replacedBy":"169"},{"ruleId":"160","replacedBy":"170"},{"ruleId":"162","replacedBy":"171"},{"ruleId":"164","replacedBy":"172"},{"ruleId":"166","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":45,"column":5,"nodeType":"176","messageId":"177","endLine":45,"endColumn":16},{"ruleId":"174","severity":1,"message":"175","line":57,"column":5,"nodeType":"176","messageId":"177","endLine":57,"endColumn":16},{"ruleId":"174","severity":1,"message":"175","line":62,"column":7,"nodeType":"176","messageId":"177","endLine":62,"endColumn":18},{"ruleId":"174","severity":1,"message":"175","line":50,"column":5,"nodeType":"176","messageId":"177","endLine":50,"endColumn":16},{"ruleId":"174","severity":1,"message":"175","line":64,"column":5,"nodeType":"176","messageId":"177","endLine":64,"endColumn":16},{"ruleId":"174","severity":1,"message":"175","line":71,"column":7,"nodeType":"176","messageId":"177","endLine":71,"endColumn":18},{"ruleId":"156","replacedBy":"178"},{"ruleId":"158","replacedBy":"179"},{"ruleId":"160","replacedBy":"180"},{"ruleId":"162","replacedBy":"181"},{"ruleId":"164","replacedBy":"182"},{"ruleId":"166","replacedBy":"183"},{"ruleId":"156","replacedBy":"184"},{"ruleId":"158","replacedBy":"185"},{"ruleId":"160","replacedBy":"186"},{"ruleId":"162","replacedBy":"187"},{"ruleId":"164","replacedBy":"188"},{"ruleId":"166","replacedBy":"189"},{"ruleId":"174","severity":1,"message":"175","line":80,"column":5,"nodeType":"176","messageId":"177","endLine":80,"endColumn":16},{"ruleId":"174","severity":1,"message":"175","line":96,"column":5,"nodeType":"176","messageId":"177","endLine":96,"endColumn":16},{"ruleId":"174","severity":1,"message":"175","line":117,"column":5,"nodeType":"176","messageId":"177","endLine":117,"endColumn":16},{"ruleId":"174","severity":1,"message":"175","line":121,"column":9,"nodeType":"176","messageId":"177","endLine":121,"endColumn":20},{"ruleId":"174","severity":1,"message":"175","line":160,"column":7,"nodeType":"176","messageId":"177","endLine":160,"endColumn":18},{"ruleId":"174","severity":1,"message":"175","line":94,"column":5,"nodeType":"176","messageId":"177","endLine":94,"endColumn":16},{"ruleId":"174","severity":1,"message":"175","line":109,"column":5,"nodeType":"176","messageId":"177","endLine":109,"endColumn":16},{"ruleId":"174","severity":1,"message":"175","line":125,"column":5,"nodeType":"176","messageId":"177","endLine":125,"endColumn":16},{"ruleId":"174","severity":1,"message":"175","line":141,"column":5,"nodeType":"176","messageId":"177","endLine":141,"endColumn":16},{"ruleId":"174","severity":1,"message":"175","line":163,"column":5,"nodeType":"176","messageId":"177","endLine":163,"endColumn":16},{"ruleId":"174","severity":1,"message":"175","line":170,"column":7,"nodeType":"176","messageId":"177","endLine":170,"endColumn":18},{"ruleId":"174","severity":1,"message":"175","line":171,"column":7,"nodeType":"176","messageId":"177","endLine":171,"endColumn":18},{"ruleId":"174","severity":1,"message":"175","line":42,"column":9,"nodeType":"176","messageId":"177","endLine":42,"endColumn":20},{"ruleId":"174","severity":1,"message":"175","line":55,"column":9,"nodeType":"176","messageId":"177","endLine":55,"endColumn":20},{"ruleId":"174","severity":1,"message":"175","line":69,"column":9,"nodeType":"176","messageId":"177","endLine":69,"endColumn":20},{"ruleId":"174","severity":1,"message":"175","line":94,"column":5,"nodeType":"176","messageId":"177","endLine":94,"endColumn":16},{"ruleId":"174","severity":1,"message":"175","line":125,"column":5,"nodeType":"176","messageId":"177","endLine":125,"endColumn":16},{"ruleId":"174","severity":1,"message":"175","line":141,"column":5,"nodeType":"176","messageId":"177","endLine":141,"endColumn":16},{"ruleId":"174","severity":1,"message":"175","line":156,"column":5,"nodeType":"176","messageId":"177","endLine":156,"endColumn":16},{"ruleId":"174","severity":1,"message":"175","line":178,"column":5,"nodeType":"176","messageId":"177","endLine":178,"endColumn":16},{"ruleId":"174","severity":1,"message":"175","line":185,"column":7,"nodeType":"176","messageId":"177","endLine":185,"endColumn":18},{"ruleId":"174","severity":1,"message":"175","line":186,"column":7,"nodeType":"176","messageId":"177","endLine":186,"endColumn":18},{"ruleId":"174","severity":1,"message":"175","line":80,"column":5,"nodeType":"176","messageId":"177","endLine":80,"endColumn":16},{"ruleId":"174","severity":1,"message":"175","line":96,"column":5,"nodeType":"176","messageId":"177","endLine":96,"endColumn":16},{"ruleId":"174","severity":1,"message":"175","line":117,"column":5,"nodeType":"176","messageId":"177","endLine":117,"endColumn":16},{"ruleId":"174","severity":1,"message":"175","line":121,"column":9,"nodeType":"176","messageId":"177","endLine":121,"endColumn":20},"lines-around-directive",["190"],"no-spaced-func",["191"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["190"],["191"],[],[],[],[],"no-console","Unexpected console statement.","MemberExpression","unexpected",["190"],["191"],[],[],[],[],["190"],["191"],[],[],[],[],"padding-line-between-statements","func-call-spacing"]