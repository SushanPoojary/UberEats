[{"/Users/sushanpoojary/Documents/Sasha/273/Lab1/uber-eats/uber-eats-frontend/src/index.js":"1","/Users/sushanpoojary/Documents/Sasha/273/Lab1/uber-eats/uber-eats-frontend/src/App.js":"2","/Users/sushanpoojary/Documents/Sasha/273/Lab1/uber-eats/uber-eats-frontend/src/reportWebVitals.js":"3","/Users/sushanpoojary/Documents/Sasha/273/GitLab1/UberEats/uber-eats-frontend/src/index.js":"4","/Users/sushanpoojary/Documents/Sasha/273/GitLab1/UberEats/uber-eats-frontend/src/reportWebVitals.js":"5","/Users/sushanpoojary/Documents/Sasha/273/GitLab1/UberEats/uber-eats-frontend/src/components/userlogin/index.jsx":"6","/Users/sushanpoojary/Documents/Sasha/273/GitLab1/UberEats/uber-eats-frontend/src/components/userlogin/userReg.jsx":"7","/Users/sushanpoojary/Documents/Sasha/273/GitLab1/UberEats/uber-eats-frontend/src/components/userlogin/history.js":"8","/Users/sushanpoojary/Documents/Sasha/273/GitLab1/UberEats/uber-eats-frontend/src/Routes.js":"9","/Users/sushanpoojary/Documents/Sasha/273/GitLab1/UberEats/uber-eats-frontend/src/history.js":"10","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/index.js":"11","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/reportWebVitals.js":"12","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/Routes.js":"13","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/App.js":"14","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/history.js":"15","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/NavBar.js":"16","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/components/restaurant/resReg.js":"17","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/components/customer/userReg.jsx":"18","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/components/restaurant/index.js":"19","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/components/customer/index.jsx":"20","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/components/restaurant/history.js":"21","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/components/customer/history.js":"22","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/components/restaurant/resHome.js":"23","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/components/restaurant/reshome.js":"24","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/components/restaurant/resProfile.js":"25","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/components/restaurant/temp.js":"26","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/components/customer/userProfile.js":"27"},{"size":501,"mtime":1631778720389,"results":"28","hashOfConfig":"29"},{"size":577,"mtime":1631672320371,"results":"30","hashOfConfig":"29"},{"size":375,"mtime":1631778709556,"results":"31","hashOfConfig":"29"},{"size":748,"mtime":1632081085078,"results":"32","hashOfConfig":"33"},{"size":375,"mtime":1631823862320,"results":"34","hashOfConfig":"33"},{"size":3724,"mtime":1632180010273,"results":"35","hashOfConfig":"33"},{"size":4759,"mtime":1632180008923,"results":"36","hashOfConfig":"33"},{"size":86,"mtime":1632075024278,"results":"37","hashOfConfig":"33"},{"size":546,"mtime":1632078569666,"results":"38","hashOfConfig":"33"},{"size":86,"mtime":1632074098811,"results":"39","hashOfConfig":"33"},{"size":751,"mtime":1633305602906,"results":"40","hashOfConfig":"41"},{"size":375,"mtime":1632724449309,"results":"42","hashOfConfig":"41"},{"size":1314,"mtime":1633419340518,"results":"43","hashOfConfig":"41"},{"size":443,"mtime":1633047226847,"results":"44","hashOfConfig":"41"},{"size":86,"mtime":1632724449308,"results":"45","hashOfConfig":"41"},{"size":5198,"mtime":1633420530518,"results":"46","hashOfConfig":"41"},{"size":8945,"mtime":1633411860488,"results":"47","hashOfConfig":"41"},{"size":8553,"mtime":1633411806468,"results":"48","hashOfConfig":"41"},{"size":7076,"mtime":1633411833737,"results":"49","hashOfConfig":"41"},{"size":7087,"mtime":1633419798386,"results":"50","hashOfConfig":"41"},{"size":86,"mtime":1633308965266,"results":"51","hashOfConfig":"41"},{"size":86,"mtime":1633308968062,"results":"52","hashOfConfig":"41"},{"size":2091,"mtime":1633402524122,"results":"53","hashOfConfig":"41"},{"size":833,"mtime":1633310062245,"results":"54","hashOfConfig":"41"},{"size":6296,"mtime":1633410552790,"results":"55","hashOfConfig":"41"},{"size":5599,"mtime":1633408700072,"results":"56","hashOfConfig":"41"},{"size":8679,"mtime":1633419179727,"results":"57","hashOfConfig":"41"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ipha2x",{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"qnnj4l",{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"d7vjta",{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"82"},"/Users/sushanpoojary/Documents/Sasha/273/Lab1/uber-eats/uber-eats-frontend/src/index.js",[],"/Users/sushanpoojary/Documents/Sasha/273/Lab1/uber-eats/uber-eats-frontend/src/App.js",[],["122","123","124","125","126","127"],"/Users/sushanpoojary/Documents/Sasha/273/Lab1/uber-eats/uber-eats-frontend/src/reportWebVitals.js",[],"/Users/sushanpoojary/Documents/Sasha/273/GitLab1/UberEats/uber-eats-frontend/src/index.js",[],["128","129","130","131","132","133"],"/Users/sushanpoojary/Documents/Sasha/273/GitLab1/UberEats/uber-eats-frontend/src/reportWebVitals.js",[],"/Users/sushanpoojary/Documents/Sasha/273/GitLab1/UberEats/uber-eats-frontend/src/components/userlogin/index.jsx",["134","135","136"],"/Users/sushanpoojary/Documents/Sasha/273/GitLab1/UberEats/uber-eats-frontend/src/components/userlogin/userReg.jsx",["137","138","139"],"/Users/sushanpoojary/Documents/Sasha/273/GitLab1/UberEats/uber-eats-frontend/src/components/userlogin/history.js",[],"/Users/sushanpoojary/Documents/Sasha/273/GitLab1/UberEats/uber-eats-frontend/src/Routes.js",[],"/Users/sushanpoojary/Documents/Sasha/273/GitLab1/UberEats/uber-eats-frontend/src/history.js",[],"/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/index.js",[],["140","141","142","143","144","145"],"/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/reportWebVitals.js",[],"/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/Routes.js",[],"/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/App.js",[],"/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/history.js",[],["146","147","148","149","150","151"],"/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/NavBar.js",["152","153","154"],"/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/components/restaurant/resReg.js",["155","156","157","158","159","160","161"],"/* eslint-disable prefer-destructuring */\n/* eslint-disable react/destructuring-assignment */\nimport React from 'react';\n// import ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Axios from 'axios';\nimport {\n  BrowserRouter as Router,\n  Link,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport styled from 'styled-components';\nimport history from './history';\n// eslint-disable-next-line import/no-cycle\nimport { resLogin } from './index';\nimport NavBar from '../../NavBar';\n\nconst HeadText = styled.h2`\n    font-size: 30px;\n    font-weight: 500;\n    line-height: 1.24;\n    color: ##000000;\n    float: left;\n    // z-index: 0;\n    // margin: 0;\n    //padding-left: 150px;\n`;\nconst OverallText = styled.h2`\n    font-size: 18px;\n    font-weight: 300;\n    line-height: 1.00;\n    color: ##000000;\n    float: left;\n    // z-index: 0;\n    // margin: 0;\n    //padding-left: 150px;\n`;\n\nexport class resReg extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      location: '',\n      email: '',\n      password: '',\n      // register: false,\n      redirect: null,\n      usernameValid: '',\n      locationValid: '',\n      emailValid: '',\n      passwordValid: '',\n      usernameError: '',\n      locationError: '',\n      emailError: '',\n      passwordError: '',\n    };\n    this.usernameInputHandler = this.usernameInputHandler.bind(this);\n    this.locationInputHandler = this.locationInputHandler.bind(this);\n    this.emailInputHandler = this.emailInputHandler.bind(this);\n    this.passwordInputHandler = this.passwordInputHandler.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // componentDidMount() {\n  //   this.setState({\n  //     // eslint-disable-next-line react/no-unused-state\n  //     register: false,\n  //   });\n  // }\n\n  handleValidation() {\n    // console.log('validation');\n    const {\n      usernameValid,\n      locationValid,\n      emailValid,\n      passwordValid,\n    } = this.state;\n    const usernameError = usernameValid ? '' : 'Name cannot be empty.';\n    const locationError = locationValid ? '' : 'Location cannot be empty.';\n    const emailError = emailValid ? '' : 'Email is invalid';\n    const passwordError = passwordValid ? '' : 'Password cannot be blank.';\n    this.setState({\n      usernameError,\n      locationError,\n      emailError,\n      passwordError,\n    });\n  }\n\n  usernameInputHandler = (event) => {\n    console.log(event.target.value);\n    const username = event.target.value;\n    if (username !== '') {\n      this.setState({\n        username,\n        usernameValid: true,\n      });\n    } else {\n      this.setState({\n        usernameValid: false,\n      });\n    }\n  }\n\n  // contactInputHandler = (event) => {\n  //   console.log(event.target.value);\n  //   const contact = event.target.value;\n  //   const contactRegExp = new RegExp(/^[0-9\\b]+$/);\n  //   if (contact !== '' && contactRegExp.test(contact) && contact.length === 10) {\n  //     this.setState({\n  //       contact,\n  //       contactValid: true,\n  //     });\n  //   } else {\n  //     this.setState({\n  //       contactValid: false,\n  //     });\n  //   }\n  // }\n\n  emailInputHandler = (event) => {\n    console.log(event.target.value);\n    const email = event.target.value;\n    const emailRegExp = new RegExp('.+@.+\\\\..+');\n    if (email !== '' && emailRegExp.test(email)) {\n      this.setState({\n        email,\n        emailValid: true,\n      });\n    } else {\n      this.setState({\n        emailValid: false,\n      });\n    }\n  }\n\n  passwordInputHandler = (event) => {\n    console.log(event.target.value);\n    const password = event.target.value;\n    if (password !== '') {\n      this.setState({\n        password,\n        passwordValid: true,\n      });\n    } else {\n      this.setState({\n        passwordValid: false,\n      });\n    }\n  }\n\n  locationInputHandler = (event) => {\n    console.log(event.target.value);\n    const location = event.target.value;\n    if (location !== '') {\n      this.setState({\n        location,\n        locationValid: true,\n      });\n    } else {\n      this.setState({\n        locationValid: false,\n      });\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const {\n      username,\n      location,\n      email,\n      password,\n    } = this.state;\n    console.log(username, location, email, password);\n    Axios.post('http://localhost:3001/resReg', {\n      username,\n      location,\n      email,\n      password,\n    }).then((response) => {\n      console.log('Status Code : ', response.status);\n      console.log(response);\n      this.setState({\n        redirect: true,\n      });\n\n      // props.history.push('/login');\n      // <Redirect to='/login'/>\n    }); this.handleValidation();\n  }\n\n  render() {\n    let redirectVar = null;\n    if (this.state.redirect) {\n      redirectVar = <Redirect to=\"/reslogin\" />;\n    }\n    const usernameError = this.state.usernameError;\n    const locationError = this.state.locationError;\n    const emailError = this.state.emailError;\n    const passwordError = this.state.passwordError;\n    return (\n      <div>\n        {redirectVar}\n        <NavBar />\n        <div className=\"container\">\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <HeadText>\n                  Let&apos;s register your business\n                  <br />\n                  <br />\n                </HeadText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  Enter details.\n                  <br />\n                </OverallText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  <input type=\"text\" name=\"username\" placeholder=\" Restaurant Name \" style={{ width: '390px', height: '35px' }} onChange={this.usernameInputHandler} required />\n                  <span style={{ color: 'red' }}>\n                    {usernameError}\n                  </span>\n                  <br />\n                </OverallText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  <input type=\"email\" name=\"email\" placeholder=\" Email \" style={{ width: '390px', height: '35px' }} onChange={this.emailInputHandler} required />\n                  <span style={{ color: 'red' }}>\n                    {emailError}\n                  </span>\n                  <br />\n                </OverallText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  <input type=\"password\" name=\"password\" placeholder=\" Password \" style={{ width: '390px', height: '35px' }} onChange={this.passwordInputHandler} required />\n                  <span style={{ color: 'red' }}>\n                    {passwordError}\n                  </span>\n                  <br />\n                </OverallText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  <input type=\"text\" name=\"location\" placeholder=\" Restaurant Location \" style={{ width: '390px', height: '35px' }} onChange={this.locationInputHandler} required />\n                  <span style={{ color: 'red' }}>\n                    {locationError}\n                  </span>\n                  <br />\n                  <br />\n                </OverallText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  <input type=\"button\" value=\"Register\" style={{ width: '390px', height: '35px', backgroundColor: '#7bb420' }} onClick={this.handleSubmit} />\n                </OverallText>\n              </div>\n            </div>\n          </form>\n          <div className=\"row\">\n            <div className=\"col-xs\" />\n            <div className=\"col-xs\">\n              <OverallText>\n                Already a partner?\n                <Router forceRefresh>\n                  <Link to=\"/reslogin\" onClick={() => history.push('/reslogin')} style={{ color: 'green' }}> Login</Link>\n                  <Switch>\n                    <Route exact path=\"/reslogin\" component={resLogin} />\n                  </Switch>\n                </Router>\n              </OverallText>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/components/customer/userReg.jsx",["162","163","164","165","166","167","168"],"/* eslint-disable prefer-destructuring */\n/* eslint-disable react/destructuring-assignment */\nimport React from 'react';\n// import ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Axios from 'axios';\nimport {\n  BrowserRouter as Router,\n  Link,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport styled from 'styled-components';\nimport history from './history';\n// eslint-disable-next-line import/no-cycle\nimport { UserLogin } from './index';\nimport NavBar from '../../NavBar';\n\nconst HeadText = styled.h2`\n    font-size: 30px;\n    font-weight: 500;\n    line-height: 1.24;\n    color: ##000000;\n    float: left;\n    // z-index: 0;\n    // margin: 0;\n    //padding-left: 150px;\n`;\nconst OverallText = styled.h2`\n    font-size: 18px;\n    font-weight: 300;\n    line-height: 1.00;\n    color: ##000000;\n    float: left;\n    // z-index: 0;\n    // margin: 0;\n    //padding-left: 150px;\n`;\n\nexport class userReg extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      contact: '',\n      email: '',\n      password: '',\n      // register: false,\n      redirect: null,\n      usernameValid: '',\n      contactValid: '',\n      emailValid: '',\n      passwordValid: '',\n      usernameError: '',\n      contactError: '',\n      emailError: '',\n      passwordError: '',\n    };\n    this.usernameInputHandler = this.usernameInputHandler.bind(this);\n    this.contactInputHandler = this.contactInputHandler.bind(this);\n    this.emailInputHandler = this.emailInputHandler.bind(this);\n    this.passwordInputHandler = this.passwordInputHandler.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // componentDidMount() {\n  //   this.setState({\n  //     // eslint-disable-next-line react/no-unused-state\n  //     register: false,\n  //   });\n  // }\n\n  handleValidation() {\n    // console.log('validation');\n    const {\n      usernameValid,\n      contactValid,\n      emailValid,\n      passwordValid,\n    } = this.state;\n    const usernameError = usernameValid ? '' : 'Name cannot be empty.';\n    const contactError = contactValid ? '' : 'Contact is invalid';\n    const emailError = emailValid ? '' : 'Email is invalid';\n    const passwordError = passwordValid ? '' : 'Password cannot be blank.';\n    this.setState({\n      usernameError,\n      contactError,\n      emailError,\n      passwordError,\n    });\n  }\n\n  usernameInputHandler = (event) => {\n    console.log(event.target.value);\n    const username = event.target.value;\n    if (username !== '') {\n      this.setState({\n        username,\n        usernameValid: true,\n      });\n    } else {\n      this.setState({\n        usernameValid: false,\n      });\n    }\n  }\n\n  contactInputHandler = (event) => {\n    console.log(event.target.value);\n    const contact = event.target.value;\n    const contactRegExp = new RegExp(/^[0-9\\b]+$/);\n    if (contact !== '' && contactRegExp.test(contact) && contact.length === 10) {\n      this.setState({\n        contact,\n        contactValid: true,\n      });\n    } else {\n      this.setState({\n        contactValid: false,\n      });\n    }\n  }\n\n  emailInputHandler = (event) => {\n    console.log(event.target.value);\n    const email = event.target.value;\n    const emailRegExp = new RegExp('.+@.+\\\\..+');\n    if (email !== '' && emailRegExp.test(email)) {\n      this.setState({\n        email,\n        emailValid: true,\n      });\n    } else {\n      this.setState({\n        emailValid: false,\n      });\n    }\n  }\n\n  passwordInputHandler = (event) => {\n    console.log(event.target.value);\n    const password = event.target.value;\n    if (password !== '') {\n      this.setState({\n        password,\n        passwordValid: true,\n      });\n    } else {\n      this.setState({\n        passwordValid: false,\n      });\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const {\n      username,\n      contact,\n      email,\n      password,\n    } = this.state;\n    console.log(username, contact, email, password);\n    Axios.post('http://localhost:3001/userReg', {\n      username,\n      contact,\n      email,\n      password,\n    }).then((response) => {\n      console.log('Status Code : ', response.status);\n      console.log(response);\n      this.setState({\n        redirect: true,\n      });\n\n      // props.history.push('/login');\n      // <Redirect to='/login'/>\n    }); this.handleValidation();\n  }\n\n  render() {\n    let redirectVar = null;\n    if (this.state.redirect) {\n      redirectVar = <Redirect to=\"/login\" />;\n    }\n    const usernameError = this.state.usernameError;\n    const contactError = this.state.contactError;\n    const emailError = this.state.emailError;\n    const passwordError = this.state.passwordError;\n    return (\n      <div>\n        {redirectVar}\n        <NavBar />\n        <div className=\"container\">\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <HeadText>\n                  Let&apos;s get started\n                  <br />\n                  <br />\n                </HeadText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  Enter your details(required).\n                  <br />\n                </OverallText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  <input type=\"text\" name=\"username\" placeholder=\" Name \" style={{ width: '390px', height: '35px' }} onChange={this.usernameInputHandler} required />\n                  <span style={{ color: 'red' }}>\n                    {usernameError}\n                  </span>\n                  <br />\n                </OverallText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  <input type=\"tel\" name=\"contact\" placeholder=\" Contact Number \" style={{ width: '390px', height: '35px' }} onChange={this.contactInputHandler} required />\n                  <span style={{ color: 'red' }}>\n                    {contactError}\n                  </span>\n                  <br />\n                </OverallText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  <input type=\"email\" name=\"email\" placeholder=\" Email \" style={{ width: '390px', height: '35px' }} onChange={this.emailInputHandler} required />\n                  <span style={{ color: 'red' }}>\n                    {emailError}\n                  </span>\n                  <br />\n                </OverallText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  <input type=\"password\" name=\"password\" placeholder=\" Password \" style={{ width: '390px', height: '35px' }} onChange={this.passwordInputHandler} required />\n                  <span style={{ color: 'red' }}>\n                    {passwordError}\n                  </span>\n                  <br />\n                  <br />\n                </OverallText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  <input type=\"button\" value=\"Register\" style={{ width: '390px', height: '35px', backgroundColor: '#7bb420' }} onClick={this.handleSubmit} />\n                </OverallText>\n              </div>\n            </div>\n          </form>\n          <div className=\"row\">\n            <div className=\"col-xs\" />\n            <div className=\"col-xs\">\n              <OverallText>\n                Already have an account?\n                <Router forceRefresh>\n                  <Link to=\"/login\" onClick={() => history.push('/login')} style={{ color: 'green' }}> Login</Link>\n                  <Switch>\n                    <Route exact path=\"/login\" component={UserLogin} />\n                  </Switch>\n                </Router>\n              </OverallText>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/components/restaurant/index.js",["169","170","171","172"],"/* eslint-disable prefer-destructuring */\n/* eslint-disable react/destructuring-assignment */\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport styled from 'styled-components';\nimport cookie from 'react-cookies';\nimport Axios from 'axios';\nimport {\n  BrowserRouter as Router,\n  Link,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport { Form } from 'react-bootstrap';\nimport history from './history';\n// eslint-disable-next-line import/no-cycle\nimport { resReg } from './resReg';\nimport NavBar from '../../NavBar';\n\nconst HeadText = styled.h2`\n    font-size: 30px;\n    font-weight: 500;\n    line-height: 1.24;\n    color: ##000000;\n    float: left;\n    // z-index: 0;\n    // margin: 0;\n    //padding-left: 150px;\n`;\nconst OverallText = styled.h2`\n    font-size: 18px;\n    font-weight: 300;\n    line-height: 1.00;\n    color: ##000000;\n    float: left;\n    // z-index: 0;\n    // margin: 0;\n    //padding-left: 150px;\n`;\n\nexport class resLogin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      authFlag: false,\n      authMessage: '',\n      emailValid: '',\n      passwordValid: '',\n      redirectHome: '',\n      emailError: '',\n      passwordError: '',\n      authMessageE: '',\n    };\n    // this.emailInputHandler = this.emailInputHandler.bind(this);\n    this.passwordInputHandler = this.passwordInputHandler.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleValidation() {\n    // console.log('validation');\n    const {\n      emailValid,\n      passwordValid,\n      authFlag,\n      authMessage,\n    } = this.state;\n    const emailError = emailValid ? '' : 'Email is invalid';\n    const passwordError = passwordValid ? '' : 'Password is invalid';\n    const authMessageE = authFlag ? '' : authMessage;\n    this.setState({\n      emailError,\n      passwordError,\n      authMessageE,\n    });\n  }\n\n  emailInputHandler = (event) => {\n    console.log(event.target.value);\n    const email = event.target.value;\n    const emailRegExp = new RegExp('.+@.+\\\\..+');\n    if (email !== '' && emailRegExp.test(email)) {\n      this.setState({\n        email,\n        emailValid: true,\n      });\n    } else {\n      this.setState({\n        emailValid: false,\n      });\n    }\n  }\n\n  passwordInputHandler = (event) => {\n    console.log(event.target.value);\n    const password = event.target.value;\n    if (password !== '') {\n      this.setState({\n        password,\n        passwordValid: true,\n      });\n    } else {\n      this.setState({\n        passwordValid: false,\n      });\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const logdata = {\n      email: this.state.email,\n      password: this.state.password,\n    };\n\n    console.log(logdata);\n    Axios.defaults.withCredentials = true;\n    Axios.post('http://localhost:3001/reslogin', logdata)\n      .then((response) => {\n        console.log('Status Code : ', response.status);\n        if (response.status === 200) {\n          const { status } = response.data;\n          if (status === 200) {\n            const { token } = response.data;\n            localStorage.setItem('ubereatsResToken', token);\n            this.setState({\n              authFlag: true,\n              authMessage: '',\n              redirectHome: <Redirect to=\"/resHome\" />,\n            });\n          } else if (status === 403) {\n            this.setState({\n              authFlag: false,\n              authMessage: 'Invalid Credentials',\n            });\n          } else if (status === 404) {\n            this.setState({\n              authFlag: false,\n              authMessage: response.data.message,\n            });\n          } else {\n            this.setState({\n              authFlag: false,\n              authMessage: response.data.message,\n            });\n          }\n        } else {\n          this.setState({\n            authFlag: false,\n            authMessage: 'DB Error',\n          });\n        }\n      }); this.handleValidation();\n  }\n\n  render() {\n    let redirectVar = null;\n    if (cookie.load('cookie')) {\n      redirectVar = <Redirect to=\"/resHome\" />;\n    }\n    const redirectHome = this.state.redirectHome;\n    const emailError = this.state.emailError;\n    const passwordError = this.state.passwordError;\n    const authMessageE = this.state.authMessageE;\n    return (\n      <div>\n        {redirectVar}\n        {redirectHome}\n        <NavBar />\n        <div className=\"container\">\n          <Form>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <HeadText>\n                  Welcome back\n                  <br />\n                  <br />\n                </HeadText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  Sign in with your email address.\n                  <br />\n                </OverallText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  <input type=\"email\" name=\"email\" placeholder=\" Email \" style={{ width: '390px', height: '35px' }} onChange={this.emailInputHandler.bind(this)} />\n                  <span style={{ color: 'red' }}>\n                    {emailError}\n                  </span>\n                  <br />\n                </OverallText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  <input type=\"password\" name=\"password\" placeholder=\" Password \" style={{ width: '390px', height: '35px' }} onChange={this.passwordInputHandler} />\n                  <span style={{ color: 'red' }}>\n                    {passwordError}\n                  </span>\n                  <br />\n                  <span style={{ color: 'red' }}>\n                    {authMessageE}\n                  </span>\n                  <br />\n                </OverallText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  <input type=\"button\" value=\"Login\" style={{ width: '390px', height: '35px', backgroundColor: '#7bb420' }} onClick={this.handleSubmit} />\n                </OverallText>\n              </div>\n            </div>\n            <OverallText>\n              New to Uber?\n              <Router forceRefresh>\n                <Link to=\"/resReg\" onClick={() => history.push('/resReg')} style={{ color: 'green' }}> Create an account</Link>\n                <Switch>\n                  <Route exact path=\"/resReg\" component={resReg} />\n                </Switch>\n              </Router>\n            </OverallText>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/components/customer/index.jsx",["173","174","175","176","177"],"/* eslint-disable prefer-destructuring */\n/* eslint-disable react/destructuring-assignment */\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport styled from 'styled-components';\nimport cookie from 'react-cookies';\nimport Axios from 'axios';\nimport {\n  BrowserRouter as Router,\n  Link,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport { Form } from 'react-bootstrap';\nimport history from './history';\n// eslint-disable-next-line import/no-cycle\nimport { userReg } from './userReg';\nimport NavBar from '../../NavBar';\n\nconst HeadText = styled.h2`\n    font-size: 30px;\n    font-weight: 500;\n    line-height: 1.24;\n    color: ##000000;\n    float: left;\n    // z-index: 0;\n    // margin: 0;\n    //padding-left: 150px;\n`;\nconst OverallText = styled.h2`\n    font-size: 18px;\n    font-weight: 300;\n    line-height: 1.00;\n    color: ##000000;\n    float: left;\n    // z-index: 0;\n    // margin: 0;\n    //padding-left: 150px;\n`;\n\nexport class UserLogin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      authFlag: false,\n      authMessage: '',\n      emailValid: '',\n      passwordValid: '',\n      redirectHome: '',\n      emailError: '',\n      passwordError: '',\n      authMessageE: '',\n    };\n    this.emailInputHandler = this.emailInputHandler.bind(this);\n    this.passwordInputHandler = this.passwordInputHandler.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleValidation() {\n    // console.log('validation');\n    const {\n      emailValid,\n      passwordValid,\n      authFlag,\n      authMessage,\n    } = this.state;\n    const emailError = emailValid ? '' : 'Email is invalid';\n    const passwordError = passwordValid ? '' : 'Password is invalid';\n    const authMessageE = authFlag ? '' : authMessage;\n    this.setState({\n      emailError,\n      passwordError,\n      authMessageE,\n    });\n  }\n\n  emailInputHandler = (event) => {\n    console.log(event.target.value);\n    const email = event.target.value;\n    const emailRegExp = new RegExp('.+@.+\\\\..+');\n    if (email !== '' && emailRegExp.test(email)) {\n      this.setState({\n        email,\n        emailValid: true,\n      });\n    } else {\n      this.setState({\n        emailValid: false,\n      });\n    }\n  }\n\n  passwordInputHandler = (event) => {\n    console.log(event.target.value);\n    const password = event.target.value;\n    if (password !== '') {\n      this.setState({\n        password,\n        passwordValid: true,\n      });\n    } else {\n      this.setState({\n        passwordValid: false,\n      });\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const logdata = {\n      email: this.state.email,\n      password: this.state.password,\n    };\n\n    console.log(logdata);\n    Axios.defaults.withCredentials = true;\n    Axios.post('http://localhost:3001/login', logdata)\n      .then((response) => {\n        console.log('Status Code : ', response.status);\n        if (response.status === 200) {\n          const status = response.data.status;\n          if (status === 200) {\n            const token = response.data.token;\n            localStorage.setItem('ubereatsUserToken', token);\n            this.setState({\n              authFlag: true,\n              authMessage: '',\n              redirectHome: <Redirect to=\"/\" />,\n            });\n          } else if (status === 403) {\n            this.setState({\n              authFlag: false,\n              authMessage: 'Invalid Credentials',\n            });\n          } else if (status === 404) {\n            this.setState({\n              authFlag: false,\n              authMessage: response.data.message,\n            });\n          } else {\n            this.setState({\n              authFlag: false,\n              authMessage: response.data.message,\n            });\n          }\n        } else {\n          this.setState({\n            authFlag: false,\n            authMessage: 'DB Error',\n          });\n        }\n      }); this.handleValidation();\n  }\n\n  render() {\n    let redirectVar = null;\n    if (cookie.load('cookie')) {\n      console.log('cookie');\n      redirectVar = <Redirect to=\"/\" />;\n    }\n    const redirectHome = this.state.redirectHome;\n    const emailError = this.state.emailError;\n    const passwordError = this.state.passwordError;\n    const authMessageE = this.state.authMessageE;\n    return (\n      <div>\n        {redirectVar}\n        {redirectHome}\n        <NavBar />\n        <div className=\"container\">\n          <Form>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <HeadText>\n                  Welcome back\n                  <br />\n                  <br />\n                </HeadText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  Sign in with your email address.\n                  <br />\n                </OverallText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  <input type=\"email\" name=\"email\" placeholder=\" Email \" style={{ width: '390px', height: '35px' }} onChange={this.emailInputHandler} />\n                  <span style={{ color: 'red' }}>\n                    {emailError}\n                  </span>\n                  <br />\n                </OverallText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  <input type=\"password\" name=\"password\" placeholder=\" Password \" style={{ width: '390px', height: '35px' }} onChange={this.passwordInputHandler} />\n                  <span style={{ color: 'red' }}>\n                    {passwordError}\n                  </span>\n                  <br />\n                  <span style={{ color: 'red' }}>\n                    {authMessageE}\n                  </span>\n                  <br />\n                </OverallText>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-xs\" />\n              <div className=\"col-xs\">\n                <OverallText>\n                  <input type=\"button\" value=\"Login\" style={{ width: '390px', height: '35px', backgroundColor: '#7bb420' }} onClick={this.handleSubmit} />\n                </OverallText>\n              </div>\n            </div>\n            <OverallText>\n              New to Uber?\n              <Router forceRefresh>\n                <Link to=\"/userReg\" onClick={() => history.push('/userReg')} style={{ color: 'green' }}> Create an account</Link>\n                <Switch>\n                  <Route exact path=\"/userReg\" component={userReg} />\n                </Switch>\n              </Router>\n            </OverallText>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/components/restaurant/history.js",[],"/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/components/customer/history.js",[],"/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/components/restaurant/resHome.js",[],"/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/components/restaurant/reshome.js",[],"/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/components/restaurant/resProfile.js",["178","179","180"],"/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport cookie from 'react-cookies';\nimport Axios from 'axios';\nimport styled from 'styled-components';\nimport NavBar from '../../NavBar';\n\nconst HeadText = styled.h2`\n    font-size: 30px;\n    font-weight: 500;\n    line-height: 1.24;\n    color: ##000000;\n    float: left;\n    // z-index: 0;\n    // margin: 0;\n    //padding-left: 150px;\n`;\nconst OverallText = styled.h2`\n    font-size: 18px;\n    font-weight: 300;\n    line-height: 1.00;\n    color: ##000000;\n    float: left;\n    // z-index: 0;\n    // margin: 0;\n    //padding-left: 150px;\n`;\n\nclass resProfile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      location: '',\n      description: '',\n      contact: '',\n      picture: '',\n      dishes: '',\n      timing: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    Axios.defaults.withCredentials = true;\n    Axios.get('http://localhost:3001/resProfile')\n      .then((res) => {\n        if (res) {\n          this.setState({ name: res.data[0].name });\n          this.setState({ location: res.data[0].location });\n          this.setState({ description: res.data[0].description });\n          this.setState({ contact: res.data[0].contact });\n          this.setState({ picture: res.data[0].picture });\n          this.setState({ dishes: res.data[0].dishes });\n          this.setState({ timing: res.data[0].timings });\n        }\n      }).catch((err) => {\n        console.log(`Restaurant Profile: ${err}`);\n      });\n  }\n\n    handleChange = (e) => {\n      this.setState({ [e.target.name]: e.target.value });\n    }\n\n    updateProfile = (data) => {\n      Axios.post('http://localhost:3001/resupdateProfile', data)\n        .then((res) => {\n          if (res) {\n            console.log('Updated');\n            // this.setState({ name: data.name });\n            // this.setState({ location: data.location });\n            // this.setState({ description: data.description });\n            // this.setState({ contact: data.contact });\n            // this.setState({ picture: data.picture });\n            // this.setState({ dishes: data.dishes });\n            // this.setState({ timing: data.timing });\n          }\n        }).catch((err) => {\n          console.log(`Restaurant Update Profile: ${err}`);\n        });\n    }\n\n    updateRes = (e) => {\n      e.preventDefault();\n      const ownerData = {\n        name: this.state.name,\n        location: this.state.location,\n        description: this.state.description,\n        contact: this.state.contact,\n        picture: this.state.picture,\n        dishes: this.state.dishes,\n        timing: this.state.timing,\n      };\n      this.updateProfile(ownerData);\n    }\n\n    render() {\n      let redirectVar = null;\n      if (!cookie.load('cookie')) {\n        redirectVar = <Redirect to=\"/reslogin\" />;\n      }\n      return (\n        <div>\n          <NavBar />\n          {redirectVar}\n          <div className=\"container\">\n            <form onSubmit={this.handleSubmit}>\n              <div className=\"row\">\n                <div className=\"col-xs\" />\n                <div className=\"col-xs\">\n                  <HeadText>\n                    Restaurant&apos;s Profile\n                    <br />\n                    <br />\n                  </HeadText>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-xs\" />\n                <div className=\"col-xs\">\n                  <OverallText>\n                    Name\n                    <br />\n                    <input type=\"text\" name=\"name\" defaultValue={this.state.name} placeholder=\" Restaurant Name \" style={{ width: '390px', height: '35px' }} onChange={this.handleChange} required />\n                    <br />\n                  </OverallText>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-xs\" />\n                <div className=\"col-xs\">\n                  <OverallText>\n                    Location\n                    <br />\n                    <input type=\"text\" name=\"location\" defaultValue={this.state.location} placeholder=\" Restaurant Location \" style={{ width: '390px', height: '35px' }} onChange={this.handleChange} required />\n                    <br />\n                  </OverallText>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-xs\" />\n                <div className=\"col-xs\">\n                  <OverallText>\n                    Description\n                    <br />\n                    <input type=\"text\" name=\"description\" defaultValue={this.state.description} placeholder=\" Restaurant Description \" style={{ width: '390px', height: '35px' }} onChange={this.handleChange} required />\n                    <br />\n                  </OverallText>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-xs\" />\n                <div className=\"col-xs\">\n                  <OverallText>\n                    Contact\n                    <br />\n                    <input type=\"tel\" name=\"contact\" defaultValue={this.state.contact} placeholder=\" Restaurant Contact \" style={{ width: '390px', height: '35px' }} onChange={this.handleChange} required />\n                    <br />\n                  </OverallText>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-xs\" />\n                <div className=\"col-xs\">\n                  <OverallText>\n                    Timings\n                    <br />\n                    <input type=\"text\" name=\"timing\" defaultValue={this.state.timing} placeholder=\" Restaurant Timing \" style={{ width: '390px', height: '35px' }} onChange={this.handleChange} required />\n                    <br />\n                  </OverallText>\n                </div>\n              </div>\n              <button type=\"submit\" onClick={this.updateRes} style={{ width: '390px', height: '35px', backgroundColor: '#7bb420' }}>Update Profile</button>\n            </form>\n          </div>\n        </div>\n      );\n    }\n}\n\nexport default resProfile;\n","/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/components/restaurant/temp.js",["181"],"/Users/sushanpoojary/Documents/Sasha/273/GitLab_UE/UberEats/uber-eats-frontend/src/components/customer/userProfile.js",["182","183","184"],"/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport cookie from 'react-cookies';\nimport Axios from 'axios';\nimport styled from 'styled-components';\nimport { CountryDropdown } from 'react-country-region-selector';\nimport NavBar from '../../NavBar';\n\nconst HeadText = styled.h2`\n    font-size: 30px;\n    font-weight: 500;\n    line-height: 1.24;\n    color: ##000000;\n    float: left;\n    // z-index: 0;\n    // margin: 0;\n    //padding-left: 150px;\n`;\nconst OverallText = styled.h2`\n    font-size: 18px;\n    font-weight: 300;\n    line-height: 1.00;\n    color: ##000000;\n    float: left;\n    // z-index: 0;\n    // margin: 0;\n    //padding-left: 150px;\n`;\n\nclass userProfile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      location: '',\n      state: '',\n      country: '',\n      nickname: '',\n      dob: '',\n      about: '',\n      email: '',\n      contact: '',\n      picture: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    Axios.defaults.withCredentials = true;\n    Axios.get('http://localhost:3001/userProfile')\n      .then((res) => {\n        if (res) {\n          this.setState({ name: res.data[0].name });\n          this.setState({ location: res.data[0].location });\n          this.setState({ state: res.data[0].state });\n          this.setState({ country: res.data[0].country });\n          this.setState({ nickname: res.data[0].nickname });\n          this.setState({ dob: res.data[0].dob });\n          this.setState({ about: res.data[0].about });\n          this.setState({ email: res.data[0].email });\n          this.setState({ contact: res.data[0].contact });\n          this.setState({ picture: res.data[0].picture });\n        }\n      }).catch((err) => {\n        console.log(`User Profile: ${err}`);\n      });\n  }\n\n    handleChange = (e) => {\n      this.setState({ [e.target.name]: e.target.value });\n    }\n\n    updateProfile = (data) => {\n      Axios.post('http://localhost:3001/updateProfile', data)\n        .then((res) => {\n          if (res) {\n            console.log('Updated');\n            // this.setState({ name: data.name });\n            // this.setState({ location: data.location });\n            // this.setState({ description: data.description });\n            // this.setState({ contact: data.contact });\n            // this.setState({ picture: data.picture });\n            // this.setState({ dishes: data.dishes });\n            // this.setState({ timing: data.timing });\n          }\n        }).catch((err) => {\n          console.log(`User Update Profile: ${err}`);\n        });\n    }\n\n    updateUser = (e) => {\n      e.preventDefault();\n      const userData = {\n        name: this.state.name,\n        location: this.state.location,\n        state: this.state.state,\n        country: this.state.country,\n        nickname: this.state.nickname,\n        dob: this.state.dob,\n        about: this.state.about,\n        email: this.state.email,\n        contact: this.state.contact,\n        picture: this.state.picture,\n      };\n      this.updateProfile(userData);\n    }\n\n    selectCountry(val) {\n      this.setState({ country: val });\n    }\n\n    render() {\n      let redirectVar = null;\n      if (!cookie.load('cookie')) {\n        redirectVar = <Redirect to=\"/login\" />;\n      }\n      const { country } = this.state;\n      return (\n        <div>\n          <NavBar />\n          {redirectVar}\n          <div className=\"container\">\n            <form onSubmit={this.handleSubmit}>\n              <div className=\"row\">\n                <div className=\"col-xs\" />\n                <div className=\"col-xs\">\n                  <HeadText>\n                    User&apos;s Profile\n                    <br />\n                    <br />\n                  </HeadText>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-xs\" />\n                <div className=\"col-xs\">\n                  <OverallText>\n                    Name\n                    <br />\n                    <input type=\"text\" name=\"name\" defaultValue={this.state.name} placeholder=\" Name \" style={{ width: '390px', height: '35px' }} onChange={this.handleChange} required />\n                    <br />\n                  </OverallText>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-xs\" />\n                <div className=\"col-xs\">\n                  <OverallText>\n                    City\n                    <br />\n                    <input type=\"text\" name=\"location\" defaultValue={this.state.location} placeholder=\" City \" style={{ width: '390px', height: '35px' }} onChange={this.handleChange} required />\n                    <br />\n                  </OverallText>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-xs\" />\n                <div className=\"col-xs\">\n                  <OverallText>\n                    State\n                    <br />\n                    <input type=\"text\" name=\"state\" defaultValue={this.state.state} placeholder=\" State \" style={{ width: '390px', height: '35px' }} onChange={this.handleChange} required />\n                    <br />\n                  </OverallText>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-xs\" />\n                <div className=\"col-xs\">\n                  <OverallText>\n                    Country\n                    <br />\n                    <CountryDropdown value={country} defaultValue={this.state.country} placeholder=\" Country \" style={{ width: '390px', height: '35px' }} onChange={(val) => this.selectCountry(val)} required />\n                    <br />\n                  </OverallText>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-xs\" />\n                <div className=\"col-xs\">\n                  <OverallText>\n                    NickName\n                    <br />\n                    <input type=\"text\" name=\"nickname\" defaultValue={this.state.nickname} placeholder=\" NickName \" style={{ width: '390px', height: '35px' }} onChange={this.handleChange} required />\n                    <br />\n                  </OverallText>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-xs\" />\n                <div className=\"col-xs\">\n                  <OverallText>\n                    Date of Birth\n                    <br />\n                    <input type=\"date\" name=\"dob\" defaultValue={this.state.dob} placeholder=\" DOB \" style={{ width: '390px', height: '35px' }} onChange={this.handleChange} required />\n                    <br />\n                  </OverallText>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-xs\" />\n                <div className=\"col-xs\">\n                  <OverallText>\n                    Email\n                    <br />\n                    <input type=\"email\" name=\"email\" defaultValue={this.state.email} placeholder=\" Email \" style={{ width: '390px', height: '35px' }} onChange={this.handleChange} required />\n                    <br />\n                  </OverallText>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-xs\" />\n                <div className=\"col-xs\">\n                  <OverallText>\n                    About\n                    <br />\n                    <input type=\"text\" name=\"about\" defaultValue={this.state.about} placeholder=\" About \" style={{ width: '390px', height: '35px' }} onChange={this.handleChange} required />\n                    <br />\n                  </OverallText>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-xs\" />\n                <div className=\"col-xs\">\n                  <OverallText>\n                    Contact\n                    <br />\n                    <input type=\"tel\" name=\"contact\" defaultValue={this.state.contact} placeholder=\" Contact \" style={{ width: '390px', height: '35px' }} onChange={this.handleChange} required />\n                    <br />\n                  </OverallText>\n                </div>\n              </div>\n              <button type=\"submit\" onClick={this.updateUser} style={{ width: '390px', height: '35px', backgroundColor: '#7bb420' }}>Update Profile</button>\n            </form>\n          </div>\n        </div>\n      );\n    }\n}\n\nexport default userProfile;\n",{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"185","replacedBy":"197"},{"ruleId":"187","replacedBy":"198"},{"ruleId":"189","replacedBy":"199"},{"ruleId":"191","replacedBy":"200"},{"ruleId":"193","replacedBy":"201"},{"ruleId":"195","replacedBy":"202"},{"ruleId":"203","severity":1,"message":"204","line":45,"column":5,"nodeType":"205","messageId":"206","endLine":45,"endColumn":16},{"ruleId":"203","severity":1,"message":"204","line":57,"column":5,"nodeType":"205","messageId":"206","endLine":57,"endColumn":16},{"ruleId":"203","severity":1,"message":"204","line":62,"column":7,"nodeType":"205","messageId":"206","endLine":62,"endColumn":18},{"ruleId":"203","severity":1,"message":"204","line":50,"column":5,"nodeType":"205","messageId":"206","endLine":50,"endColumn":16},{"ruleId":"203","severity":1,"message":"204","line":64,"column":5,"nodeType":"205","messageId":"206","endLine":64,"endColumn":16},{"ruleId":"203","severity":1,"message":"204","line":71,"column":7,"nodeType":"205","messageId":"206","endLine":71,"endColumn":18},{"ruleId":"185","replacedBy":"207"},{"ruleId":"187","replacedBy":"208"},{"ruleId":"189","replacedBy":"209"},{"ruleId":"191","replacedBy":"210"},{"ruleId":"193","replacedBy":"211"},{"ruleId":"195","replacedBy":"212"},{"ruleId":"185","replacedBy":"213"},{"ruleId":"187","replacedBy":"214"},{"ruleId":"189","replacedBy":"215"},{"ruleId":"191","replacedBy":"216"},{"ruleId":"193","replacedBy":"217"},{"ruleId":"195","replacedBy":"218"},{"ruleId":"203","severity":1,"message":"204","line":43,"column":9,"nodeType":"205","messageId":"206","endLine":43,"endColumn":20},{"ruleId":"203","severity":1,"message":"204","line":57,"column":9,"nodeType":"205","messageId":"206","endLine":57,"endColumn":20},{"ruleId":"203","severity":1,"message":"204","line":71,"column":9,"nodeType":"205","messageId":"206","endLine":71,"endColumn":20},{"ruleId":"203","severity":1,"message":"204","line":95,"column":5,"nodeType":"205","messageId":"206","endLine":95,"endColumn":16},{"ruleId":"203","severity":1,"message":"204","line":126,"column":5,"nodeType":"205","messageId":"206","endLine":126,"endColumn":16},{"ruleId":"203","severity":1,"message":"204","line":142,"column":5,"nodeType":"205","messageId":"206","endLine":142,"endColumn":16},{"ruleId":"203","severity":1,"message":"204","line":157,"column":5,"nodeType":"205","messageId":"206","endLine":157,"endColumn":16},{"ruleId":"203","severity":1,"message":"204","line":179,"column":5,"nodeType":"205","messageId":"206","endLine":179,"endColumn":16},{"ruleId":"203","severity":1,"message":"204","line":186,"column":7,"nodeType":"205","messageId":"206","endLine":186,"endColumn":18},{"ruleId":"203","severity":1,"message":"204","line":187,"column":7,"nodeType":"205","messageId":"206","endLine":187,"endColumn":18},{"ruleId":"203","severity":1,"message":"204","line":95,"column":5,"nodeType":"205","messageId":"206","endLine":95,"endColumn":16},{"ruleId":"203","severity":1,"message":"204","line":110,"column":5,"nodeType":"205","messageId":"206","endLine":110,"endColumn":16},{"ruleId":"203","severity":1,"message":"204","line":126,"column":5,"nodeType":"205","messageId":"206","endLine":126,"endColumn":16},{"ruleId":"203","severity":1,"message":"204","line":142,"column":5,"nodeType":"205","messageId":"206","endLine":142,"endColumn":16},{"ruleId":"203","severity":1,"message":"204","line":164,"column":5,"nodeType":"205","messageId":"206","endLine":164,"endColumn":16},{"ruleId":"203","severity":1,"message":"204","line":171,"column":7,"nodeType":"205","messageId":"206","endLine":171,"endColumn":18},{"ruleId":"203","severity":1,"message":"204","line":172,"column":7,"nodeType":"205","messageId":"206","endLine":172,"endColumn":18},{"ruleId":"203","severity":1,"message":"204","line":81,"column":5,"nodeType":"205","messageId":"206","endLine":81,"endColumn":16},{"ruleId":"203","severity":1,"message":"204","line":97,"column":5,"nodeType":"205","messageId":"206","endLine":97,"endColumn":16},{"ruleId":"203","severity":1,"message":"204","line":118,"column":5,"nodeType":"205","messageId":"206","endLine":118,"endColumn":16},{"ruleId":"203","severity":1,"message":"204","line":122,"column":9,"nodeType":"205","messageId":"206","endLine":122,"endColumn":20},{"ruleId":"203","severity":1,"message":"204","line":81,"column":5,"nodeType":"205","messageId":"206","endLine":81,"endColumn":16},{"ruleId":"203","severity":1,"message":"204","line":97,"column":5,"nodeType":"205","messageId":"206","endLine":97,"endColumn":16},{"ruleId":"203","severity":1,"message":"204","line":118,"column":5,"nodeType":"205","messageId":"206","endLine":118,"endColumn":16},{"ruleId":"203","severity":1,"message":"204","line":122,"column":9,"nodeType":"205","messageId":"206","endLine":122,"endColumn":20},{"ruleId":"203","severity":1,"message":"204","line":161,"column":7,"nodeType":"205","messageId":"206","endLine":161,"endColumn":18},{"ruleId":"203","severity":1,"message":"204","line":59,"column":9,"nodeType":"205","messageId":"206","endLine":59,"endColumn":20},{"ruleId":"203","severity":1,"message":"204","line":71,"column":13,"nodeType":"205","messageId":"206","endLine":71,"endColumn":24},{"ruleId":"203","severity":1,"message":"204","line":81,"column":11,"nodeType":"205","messageId":"206","endLine":81,"endColumn":22},{"ruleId":"203","severity":1,"message":"204","line":59,"column":9,"nodeType":"205","messageId":"206","endLine":59,"endColumn":20},{"ruleId":"203","severity":1,"message":"204","line":66,"column":9,"nodeType":"205","messageId":"206","endLine":66,"endColumn":20},{"ruleId":"203","severity":1,"message":"204","line":78,"column":13,"nodeType":"205","messageId":"206","endLine":78,"endColumn":24},{"ruleId":"203","severity":1,"message":"204","line":88,"column":11,"nodeType":"205","messageId":"206","endLine":88,"endColumn":22},"lines-around-directive",["219"],"no-spaced-func",["220"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["219"],["220"],[],[],[],[],"no-console","Unexpected console statement.","MemberExpression","unexpected",["219"],["220"],[],[],[],[],["219"],["220"],[],[],[],[],"padding-line-between-statements","func-call-spacing"]